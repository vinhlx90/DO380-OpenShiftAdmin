---
apiVersion: v1
kind: List
items:
- apiVersion: v1
  kind: ConfigMap
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftNewApp
      template.openshift.io/expose-database_name: '{.data[''database-name'']}'
    creationTimestamp: null
    labels:
      app: mysql-persistent
      app.kubernetes.io/component: mysql-persistent
      app.kubernetes.io/instance: mysql-persistent
      app.openshift.io/runtime: mysql-database
      template: mysql-persistent-template
    name: mysql
  data:
    database-name: database
- apiVersion: v1
  kind: Secret
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftNewApp
      template.openshift.io/expose-password: '{.data[''database-password'']}'
      template.openshift.io/expose-root_password: '{.data[''database-root-password'']}'
      template.openshift.io/expose-username: '{.data[''database-user'']}'
    creationTimestamp: null
    labels:
      app: mysql-persistent
      app.kubernetes.io/component: mysql-persistent
      app.kubernetes.io/instance: mysql-persistent
      app.openshift.io/runtime: mysql-database
      template: mysql-persistent-template
    name: mysql
  stringData:
    database-password: password
    database-root-password: password
    database-user: user
- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftNewApp
    creationTimestamp: null
    labels:
      app: mysql-persistent
      app.kubernetes.io/component: mysql-persistent
      app.kubernetes.io/instance: mysql-persistent
      app.openshift.io/runtime: mysql-database
      template: mysql-persistent-template
    name: mysql
  spec:
    storageClassName: thin-csi
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: 1Gi
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftNewApp
      template.alpha.openshift.io/wait-for-ready: "true"
    creationTimestamp: null
    labels:
      app: mysql-persistent
      app.kubernetes.io/component: mysql-persistent
      app.kubernetes.io/instance: mysql-persistent
      app.openshift.io/runtime: mysql-database
      template: mysql-persistent-template
    name: mysql
  spec:
    replicas: 1
    selector:
      matchLabels:
        name: mysql
    strategy:
      type: Recreate
    template:
      metadata:
        annotations:
          openshift.io/generated-by: OpenShiftNewApp
        creationTimestamp: null
        labels:
          name: mysql
      spec:
        initContainers:
        - name: init
          image:  registry.ocp4.example.com:8443/ubi9/ubi:latest
          imagePullPolicy: IfNotPresent
          command:
          - /bin/sh
          - -vxc
          - 'df -h /opt ; dd if=/dev/urandom of=/opt/.BIG-FILE bs=1M count=770 status=progress || true ; df -h /opt'
          volumeMounts:
          - name: mysql-data
            mountPath: /opt
        containers:
        - name: mysql
          image: registry.ocp4.example.com:8443/rhel9/mysql-80:1
          imagePullPolicy: IfNotPresent
          ports:
          - containerPort: 3306
          env:
          - name: MYSQL_DATABASE
            valueFrom:
              configMapKeyRef:
                key: database-name
                name: mysql
          - name: MYSQL_USER
            valueFrom:
              secretKeyRef:
                key: database-user
                name: mysql
          - name: MYSQL_PASSWORD
            valueFrom:
              secretKeyRef:
                key: database-password
                name: mysql
          - name: MYSQL_ROOT_PASSWORD
            valueFrom:
              secretKeyRef:
                key: database-root-password
                name: mysql
          livenessProbe:
            exec:
              command:
              - /bin/sh
              - -i
              - -c
              - MYSQL_PWD="${MYSQL_PASSWORD}" mysqladmin -u ${MYSQL_USER} ping
            initialDelaySeconds: 30
            timeoutSeconds: 1
          readinessProbe:
            exec:
              command:
              - /bin/sh
              - -i
              - -c
              - MYSQL_PWD="${MYSQL_PASSWORD}" mysqladmin -u ${MYSQL_USER} ping
            initialDelaySeconds: 5
            timeoutSeconds: 1
          resources:
            limits:
              memory: 512Mi
          volumeMounts:
          - mountPath: /var/lib/mysql/data
            name: mysql-data
        volumes:
        - name: mysql-data
          persistentVolumeClaim:
            claimName: mysql
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftNewApp
      template.openshift.io/expose-uri: mysql://{.spec.clusterIP}:{.spec.ports[?(.name=="mysql")].port}
    creationTimestamp: null
    labels:
      app: mysql-persistent
      app.kubernetes.io/component: mysql-persistent
      app.kubernetes.io/instance: mysql-persistent
      app.openshift.io/runtime: mysql-database
      template: mysql-persistent-template
    name: mysql
  spec:
    ports:
    - name: mysql
      port: 3306
      targetPort: 0
    selector:
      name: mysql
  status:
    loadBalancer: {}
